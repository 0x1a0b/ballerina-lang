/**
 * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import Node from '../node';

class {{name}}Abstract extends Node {

{{#each attributes}}
    set{{methodSuffix}}(newValue, silent, title) {
        let oldValue = this.{{property}};
        title = (_.isNil(title)) ? `Modify ${this.kind}` : title;
        this.{{property}} = newValue;
        if(!silent) {
            this.trigger('tree-modified', {
                origin: this,
                type: 'modify-node',
                title,
                data: {
                    attributeName: '{{property}}',
                    newValue,
                    oldValue,
                }
            });
        }
    }

    get{{methodSuffix}}() {
        return this.{{property}};
    }

{{#if list}}
    add{{methodSuffix}}(node, i = -1, silent){
        node.parent = this;
        let index = i;
        if (i === -1) {
            this.{{property}}.push(node);
            index = this.{{property}}.length;
        } else {
            this.{{property}}.splice(i, 0, node);
        }
        if(!silent) {
            this.trigger('tree-modified', {
                origin: this,
                type: 'child-added',
                title: `Add ${node.kind}`,
                data: {
                    node,
                    index,
                },
            });
        }
    }
{{/if}}
{{/each}}
}

export default {{name}}Abstract;

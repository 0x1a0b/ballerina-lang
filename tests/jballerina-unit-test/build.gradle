/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */
 
apply from: "$rootDir/gradle/javaProjectWithExtBalo.gradle"

configurations {
    balRuntime
}

dependencies {
    implementation 'org.slf4j:slf4j-api'
    implementation project(':ballerina-core')
    implementation project(':ballerina-lang')
    implementation project(':ballerina-launcher')
    implementation project(':ballerina-io')
    implementation project(':ballerina-encoding')
    implementation project(':ballerina-reflect')
    implementation project(':ballerina-time')
    implementation project(':ballerina-internal')
    implementation project(':ballerina-jvm')

    implementation 'com.h2database:h2'
    implementation 'org.testng:testng'
    testCompile 'org.awaitility:awaitility'
    testCompile 'com.zaxxer:HikariCP'
    testCompile 'org.slf4j:slf4j-jdk14'
    testCompile 'org.apache.ws.commons.axiom:axiom-dom'
    testCompile 'org.testng:testng'
    testCompile project(path: ':ballerina-test-utils', configuration: 'shadow')
    testCompile project(':ballerina-runtime')

    balRuntime project(':ballerina-runtime')

    baloImplementation project(path: ':ballerina-builtin', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-runtime-api', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-io', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-bir', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-jvm', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-time', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-encoding', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-reflect', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-internal', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-utils', configuration: 'baloImplementation')
}

description = 'JBallerina - Unit Test Module'

task createBre(type: org.gradle.api.tasks.Copy) {
    from configurations.balRuntime
    into "$buildDir/bre/lib"
}

test {
    systemProperty "ballerina.home", "$buildDir"
    systemProperty "java.util.logging.config.file", "src/test/resources/logging.properties"
    systemProperty "java.util.logging.manager", "org.ballerinalang.logging.BLogManager"

    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }

    afterSuite { suite, result ->
        result.exception?.printStackTrace()
    }

    dependsOn createBre
}

configurations {
    testCompile.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    testCompile.exclude group: 'org.slf4j', module: 'slf4j-simple'
    testCompile.exclude group: 'org.ops4j.pax.logging', module: 'pax-logging-api'
    testCompile.exclude group: 'org.codehaus.woodstox', module: 'woodstox-core-asl'
    testCompile.exclude group: 'org.codehaus.woodstox', module: 'stax2-api'
}

configurations.all {
    resolutionStrategy {
        force 'org.ballerinalang:ballerina-lang:0.990.4-SNAPSHOT'
        force 'org.ballerinalang:ballerina-core:0.990.4-SNAPSHOT'
    }
}
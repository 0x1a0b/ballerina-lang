{
    "name": "Standard Library",
    "description": "Built in modules of Ballerina",
    "modules": [
        {
            "id": "caching",
            "description": "This module provides a set of default authentication store providers that can be extended to create new authentication store providers.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "http",
            "description": "This module provides an implementation for connecting and interacting withhttp, HTTP2, and WebSocket endpoints.",
            "constructs": {
                "records": [
                    {
                        "name": "authCacheConfig",
                        "description": "Provides a set of configurations for controlling the authorization caching behaviour of the endpoint.",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": [
                            {
                                "field_name": "scheme",
                                "data_type": "Basic|Oauth2|JWT",
                                "default_value": "",
                                "description": "Scheme of the configuration (Basic, Oauth2, JWT etc.)"
                            },
                            {
                                "field_name": "username",
                                "data_type": "string",
                                "default_value": "",
                                "description": "Username for Basic authentication"
                            },
                            {
                                "field_name": "password",
                                "data_type": "string",
                                "default_value": "",
                                "description": "Password for Basic authentication"
                            },
                            {
                                "field_name": "accessToken",
                                "data_type": "string",
                                "default_value": "",
                                "description": "Access token for Oauth2 authentication"
                            },
                            {
                                "field_name": "refreshToken",
                                "data_type": "string",
                                "default_value": "",
                                "description": "Refresh token for Oauth2 authentication"
                            },
                            {
                                "field_name": "refreshUrl",
                                "data_type": "string",
                                "default_value": "",
                                "description": "Refresh token URL for Oauth2 authentication"
                            },
                            {
                                "field_name": "consumerKey",
                                "data_type": "string",
                                "default_value": "",
                                "description": "Consumer key for Oauth2 authentication"
                            },
                            {
                                "field_name": "consumerSecret",
                                "data_type": "string",
                                "default_value": "",
                                "description": "Consumer secret for Oauth2 authentication"
                            },
                            {
                                "field_name": "tokenUrl",
                                "data_type": "string",
                                "default_value": "",
                                "description": "Token URL for Oauth2 authentication"
                            },
                            {
                                "field_name": "clientId",
                                "data_type": "string",
                                "default_value": "",
                                "description": "Clietnt ID for Oauth2 authentication"
                            },
                            {
                                "field_name": "clientSecret",
                                "data_type": "string",
                                "default_value": "",
                                "description": "Client secret for Oauth2 authentication"
                            },
                            {
                                "field_name": "credentialBearer",
                                "data_type": "auth_HEADER_BEARER|POST_BODY_BEARER",
                                "default_value": "auth_HEADER_BEARER",
                                "description": "How client authentication is sent to refresh access token (authHeaderBearer, PostBodyBearer)"
                            },
                            {
                                "field_name": "scopes",
                                "data_type": "string[]",
                                "default_value": "[]",
                                "description": "Scope of the access request"
                            }
                        ]
                    },
                    {
                        "name": "authProvider",
                        "description": "Configuration for authentication providers.",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": [
                            {
                                "field_name": "scheme",
                                "data_type": "string",
                                "default_value": "",
                                "description": "authentication scheme"
                            },
                            {
                                "field_name": "id",
                                "data_type": "string",
                                "default_value": "",
                                "description": "authentication provider instance id"
                            },
                            {
                                "field_name": "authStoreProvider",
                                "data_type": "string",
                                "default_value": "",
                                "description": "authentication store provider (file, LDAP, etc.) implementation"
                            },
                            {
                                "field_name": "authStoreProviderConfig",
                                "data_type": "auth:LdapauthProviderConfig?",
                                "default_value": "null",
                                "description": "auth store related configurations"
                            },
                            {
                                "field_name": "issuer",
                                "data_type": "string",
                                "default_value": "",
                                "description": "Identifier of the token issuer"
                            },
                            {
                                "field_name": "audience",
                                "data_type": "string",
                                "default_value": "",
                                "description": "Identifier of the token recipients"
                            },
                            {
                                "field_name": "trustStore",
                                "data_type": "http:TrustStore?",
                                "default_value": "",
                                "description": "Trustore configurations"
                            },
                            {
                                "field_name": "certificateAlias",
                                "data_type": "string",
                                "default_value": "",
                                "description": "Token signed key alias"
                            },
                            {
                                "field_name": "clockSkew",
                                "data_type": "int",
                                "default_value": "0",
                                "description": "Time in seconds to mitigate clock skew"
                            },
                            {
                                "field_name": "keyStore",
                                "data_type": "http:KeyStore?",
                                "default_value": "null",
                                "description": "<code>KeyStore</code> instance providing key store related configurations</p>"
                            },
                            {
                                "field_name": "keyAlias",
                                "data_type": "string",
                                "default_value": "",
                                "description": "The Key Alias"
                            },
                            {
                                "field_name": "keyPassword",
                                "data_type": "string",
                                "default_value": "",
                                "description": "The Key password"
                            },
                            {
                                "field_name": "expTime",
                                "data_type": "int",
                                "default_value": "0",
                                "description": "Expiry time"
                            },
                            {
                                "field_name": "signingAlg",
                                "data_type": "string",
                                "default_value": "",
                                "description": "The signing algorithm which is used to sign the JWT token"
                            },
                            {
                                "field_name": "propagateJwt",
                                "data_type": "boolean",
                                "default_value": "false",
                                "description": "<code>true</code> if propagating authentication info as JWT"
                            }
                        ]
                    },
                    {
                        "name": "authentication",
                        "description": "Can be used for enabling/disabling authentication in an HTTP service",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "Bucket",
                        "description": "Represents a discrete sub-part of the time window (Bucket).",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "CacheConfig",
                        "description": "Provides a set of configurations for controlling the caching behaviour of the endpoint.",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "CircuitBreakerConfig",
                        "description": "Provides a set of configurations for controlling the behaviour of the Circuit Breaker.",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "CircuitBreakerInferredConfig",
                        "description": "Derived set of configurations from the `CircuitBreakerConfig`.",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "CircuitHealth",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "description": "Maintains the health of the Circuit Breaker.",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "ClientEndpointConfig",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "description": "Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "CompressionConfig",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "description": "A record for providing configurations for content compression.",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "ConnectionThroTling",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "description": "Provides configurations for throTling connections of the endpoint.",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "CorsConfig",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "description": "Configurations for CORS support.",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "FailoverClientEndpointConfiguration",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "description": "Provides a set of HTTP related configurations and failover related configurations.",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "FailoverConfig",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "description": "Provides a set of configurations for controlling the failover behaviour of the endpoint.",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "FailoverInferredConfig",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "description": "Inferred failover configurations passed into the failover client.",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "FollowRedirects",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "description": "Provides configurations for controlling the endpoint's behaviour in response to HTTP redirect related responses.",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "HttpResourceConfig",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "description": "Configuration for an HTTP resource.",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "HttpServiceConfig",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "description": "Contains the configurations for an Http service.",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "HttpTimeoutError",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "description": "Defines a timeout error occurred during service invocation.",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "KeyStore",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "description": "A record for providing key store related configurations.",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "ListenerauthConfig",
                        "label": "record",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "description": "Configures the authentication scheme for a service or a resource.",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    }
                ],
                "objects": [
                    {
                        "name": "AuthHandlerRegistry",
                        "description": "Representation of the Http Auth Handler Registry.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "method": [
                            {
                                "method_type": "add",
                                "method_params": "(string id, Http:HttpAuthnHandler authnHandler)",
                                "label_return": "",
                                "return_params": "",
                                "description": "Add an HttpAuthnHandler to HttpAuthHandlerRegistry",
                                "param_name_label": "Param Name",
                                "data_type_label": "Data Type",
                                "default_value_label": "Default Value",
                                "description_label": "Description",
                                "fields": [
                                    {
                                        "param_name": "id",
                                        "data_type": "string",
                                        "default_value": "",
                                        "description": "Auth provider id"
                                    },
                                    {
                                        "param_name": "authnHandler",
                                        "data_type": "Http:HttpAuthnHandler",
                                        "default_value": "",
                                        "description": "HttpAuthnHandler instance"
                                    }
                                ]
                            },
                            {
                                "method_type": "get",
                                "method_params": "(string id)",
                                "label_return": "returns",
                                "return_params": "(HttpAuthnHandler)",
                                "description": "Retrieves an HttpAuthnHandler from HttpAuthHandlerRegistry which corresponds to the given id",
                                "param_name_label": "Param Name",
                                "data_type_label": "Data Type",
                                "default_value_label": "Default Value",
                                "description_label": "Description",
                                "fields": {
                                    "param_name": "id",
                                    "data_type": "string",
                                    "default_value": "",
                                    "description": "Auth provider id",
                                    "Return Type": "HttpAuthnHandler",
                                    "return_description": "HttpAuthnHandler instance or nil if not found"
                                }
                            },
                            {
                                "method_type": "getAll",
                                "method_params": "()",
                                "label_return": "returns",
                                "return_params": "(map<HttpAuthnHandler>)",
                                "description": "Retrieve the HttpAuthnHandler map",
                                "param_name_label": "Param Name",
                                "data_type_label": "Data Type",
                                "default_value_label": "Default Value",
                                "description_label": "Description",
                                "fields": {
                                    "param_name": "",
                                    "data_type": "",
                                    "default_value": "",
                                    "description": "",
                                    "Return Type": "map",
                                    "return_description": "map of HttpAuthnHandler"
                                }
                            },
                            {
                                "method_type": "remove",
                                "method_params": "(string id)",
                                "label_return": "",
                                "return_params": "",
                                "description": "Removes a specific authn handler from the HttpAuthnHandler map",
                                "param_name_label": "Param Name",
                                "data_type_label": "Data Type",
                                "default_value_label": "Default Value",
                                "description_label": "Description",
                                "fields": {
                                    "param_name": "id",
                                    "data_type": "string",
                                    "default_value": "",
                                    "description": ""
                                }
                            },
                            {
                                "method_type": "clear",
                                "method_params": "()",
                                "label_return": "",
                                "return_params": "",
                                "description": "Removes all authn handler from the HttpAuthnHandler map",
                                "fields": {
                                    "param_name": "enabled",
                                    "data_type": "boolean",
                                    "default_value": "true",
                                    "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                                }
                            }
                        ]
                    },
                    {
                        "name": "AuthnFilter",
                        "description": "Representation of the Authentication filter.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "AuthnHandlerChain",
                        "description": "Representation of Authentication handler chain",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "AuthzFilter",
                        "description": "Representation of the Authorization filter",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "CircuitBreakerClient",
                        "description": "A Circuit Breaker implementation which can be used to gracefully handle network failures.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "Filter",
                        "description": "Representation of a Http Request Filter. This filter will be applied before the request is dispatched to the relevant resource. Any Filter implementation should be structurally similar to the Filter object.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "FilterContext",
                        "description": "Representation of request filter Context.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "HttpAuthnHandler",
                        "description": "Representation of Authentication handler for Http traffic.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "HttpAuthzHandler",
                        "description": "Representation of Authorization Handler for Http",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "HttpBasicAuthnHandler",
                        "description": "Defines Basic Auth handler for Http traffic.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "HttpCache",
                        "description": "",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "HttpFuture",
                        "description": "Represents a 'future' that returns as a result of an asynchronous Http request submission. This can be used as a reference to fetch the results of the submission.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "HttpJwtAuthnHandler",
                        "description": "Representation of JWT Auth handler for Http traffic",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "Listener",
                        "description": "This is used for creating Http server endpoints. An Http server endpoint is capable of responding to remote callers. The Listener is responsible for initializing the endpoint using the provided configurations.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "LoadBalancerRounRobinRule",
                        "description": "Implementation of round robin load balancing strategy.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "LoadBalancerRule",
                        "description": "LoadBalancerRule provides a required interfaces to implement different algorithms.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "MockListener",
                        "description": "Mock server endpoint which does not open a listening port.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "PushPromise",
                        "description": "Represents an Http/2 PUSH_PROMISE frame.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "Request",
                        "description": "Represents an Http request.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "RequestCacheControl",
                        "description": "Configures cache control directives for a Request.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "Response",
                        "description": "Represents an Http response.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "ResponseCacheControl",
                        "description": "Configures cache control directives for a Response.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    },
                    {
                        "name": "WebSocketListener",
                        "description": "Represents a WebSocket service endpoint.",
                        "label": "object",
                        "type": "public type",
                        "field_name_label": "Field Name",
                        "data_type_label": "Date Type",
                        "default_value_label": "Default Value",
                        "description_label": "Description",
                        "fields": {
                            "field_name": "enabled",
                            "data_type": "boolean",
                            "default_value": "true",
                            "description": "Specifies whether authorization caching is enabled. Caching is enabled by default."
                        }
                    }
                ],
                "clients": [
                    {
                        "name": " Client",
                        "description": "The Http client provides the capability for initiating contact with a remote Http service. The API it provides includes functions for the standard Http methods, forwarding a received request and sending requests using custom Http verbs.",
                        "fields": [
                            {
                                "field_name_label": "Field Name",
                                "data_type_label": "Data Type",
                                "default_value_label": "Default Value",
                                "description_label": "Description",
                                "attributes": [
                                    {
                                        "field_name": "config",
                                        "data_type": "Http:ClientEndpointConfig",
                                        "default_value": "{}",
                                        "description": "The configurations associated with the client"
                                    },
                                    {
                                        "field_name": "HttpClient",
                                        "data_type": "Http:Client",
                                        "default_value": "",
                                        "description": "Chain of different Http clients which provides the capability for initiating contact with a remote Http service in resilient manner"
                                    }
                                ]
                            }
                        ],
                        "method": [
                            {
                                "method_type": "post",
                                "method_params": "(string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(Response | error<>)",
                                "description": "The post() function can be used to send Http POST requests to Http endpoints.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "message",
                                                        "data_type": "http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]?",
                                                        "default_value": "",
                                                        "description": "An HTTP request or any payload of type string, xml, json, byte[], io:ReadableByteChannel or mime:Entity[]"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "The response for the request or an error if failed to establish communication with the upstream server"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "head",
                                "method_params": "(string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(Response | error<>)",
                                "description": "The head() function can be used to send HTTP HEAD requests to HTTP endpoints.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "message",
                                                        "data_type": "http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]?",
                                                        "default_value": "",
                                                        "description": "An HTTP request or any payload of type string, xml, json, byte[], io:ReadableByteChannel or mime:Entity[]"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "The response for the request or an error if failed to establish communication with the upstream server"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "put",
                                "method_params": "(string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(Response | error<>)",
                                "description": "The put() function can be used to send HTTP PUT requests to HTTP endpoints.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "message",
                                                        "data_type": "http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]?",
                                                        "default_value": "",
                                                        "description": "An HTTP request or any payload of type string, xml, json, byte[], io:ReadableByteChannel or mime:Entity[]"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "The response for the request or an error if failed to establish communication with the upstream server"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "execute",
                                "method_params": "(string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(Response | error<>)",
                                "description": "Invokes an HTTP call with the specified HTTP verb.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "message",
                                                        "data_type": "http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]?",
                                                        "default_value": "",
                                                        "description": "An HTTP request or any payload of type string, xml, json, byte[], io:ReadableByteChannel or mime:Entity[]"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "The response for the request or an error if failed to establish communication with the upstream server"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "get",
                                "method_params": "(string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(Response | error<>)",
                                "description": "The get() function can be used to send HTTP GET requests to HTTP endpoints.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "message",
                                                        "data_type": "http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]?",
                                                        "default_value": "",
                                                        "description": "An HTTP request or any payload of type string, xml, json, byte[], io:ReadableByteChannel or mime:Entity[]"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "The response for the request or an error if failed to establish communication with the upstream server"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "options",
                                "method_params": "(string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(Response | error<>)",
                                "description": "The options() function can be used to send HTTP OPTIONS requests to HTTP endpoints.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "message",
                                                        "data_type": "http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]?",
                                                        "default_value": "",
                                                        "description": "An HTTP request or any payload of type string, xml, json, byte[], io:ReadableByteChannel or mime:Entity[]"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "The response for the request or an error if failed to establish communication with the upstream server"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "forward",
                                "method_params": "(string path, http:Request request)",
                                "label_return": "returns",
                                "return_params": "(Response | error<>)",
                                "description": "The forward() function can be used to invoke an HTTP call with inbound request's HTTP verb",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "request",
                                                        "data_type": "http:Request",
                                                        "default_value": "",
                                                        "description": "An HTTP inbound request message"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "The response for the request or an error if failed to establish communication with the upstream server"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "submit",
                                "method_params": "(string HTTPVerb, string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(HttpFuture | error<>)",
                                "description": "Submits an HTTP request to a service with the specified HTTP verb. The submit() function does not give out a Response as the result, rather it returns an HTTPFuture which can be used to do further interactions with the endpoint.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "HttpVerb",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "The HTTP verb value"
                                                    },
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "message",
                                                        "data_type": "http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]?",
                                                        "default_value": "",
                                                        "description": "An HTTP outbound request message or any payload of type string, xml, json, byte[], io:ReadableByteChannel or mime:Entity[]"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "httpFuture | error<>",
                                                "description": "An HTTPFuture that represents an asynchronous service invocation, or an error if the submission fails"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "getResponse",
                                "method_params": "(http:HttpFuture httpFuture)",
                                "label_return": "returns",
                                "return_params": "(HttpFuture | error<>)",
                                "description": "This just pass the request to actual network call.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "httpFuture",
                                                        "data_type": "http:HttpFuture",
                                                        "default_value": "",
                                                        "description": "The HttpFuture relates to a previous asynchronous invocation"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "An HTTP response message, or an error if the invocation fails"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "hasPromise",
                                "method_params": "(http:HttpFuture httpFuture)",
                                "label_return": "returns",
                                "return_params": "(boolean)",
                                "description": "This just pass the request to actual network call.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "httpFuture",
                                                        "data_type": "http:HttpFuture",
                                                        "default_value": "",
                                                        "description": "The HttpFuture relates to a previous asynchronous invocation"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "boolean",
                                                "description": "A boolean that represents whether a PushPromise exists"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "getNextPromise",
                                "method_params": "(http:HttpFuture httpFuture)",
                                "label_return": "returns",
                                "return_params": "(PushPromise | error<>)",
                                "description": "This just pass the request to actual network call.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "httpFuture",
                                                        "data_type": "http:HttpFuture",
                                                        "default_value": "",
                                                        "description": "The HttpFuture relates to a previous asynchronous invocation"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "PushPromise | error<>",
                                                "description": "An HTTP Push Promise message, or an error if the invocation fails"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "getPromisedResponse",
                                "method_params": "(http:PushPromise promise)",
                                "label_return": "returns",
                                "return_params": "(responce | error<>)",
                                "description": "This just pass the request to actual network call",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "promise",
                                                        "data_type": "http:PushPromise",
                                                        "default_value": "",
                                                        "description": "The related PushPromise"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "A promised HTTP Response message, or an error if the invocation fails"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "rejectPromise",
                                "method_params": "(string httpVerb, string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(HttpFuture | error<>)",
                                "description": "Submits an HTTP request to a service with the specified HTTP verb. The submit() function does not give out a Response as the result, rather it returns an HTTPFuture which can be used to do further interactions with the endpoint.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "promise",
                                                        "data_type": "http:PushPromise",
                                                        "default_value": "",
                                                        "description": "The Push Promise to be rejected"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "FailoverClient",
                        "description": "An HTTP client endpoint which provides failover support over multiple HTTP clients.",
                        "fields": [
                            {
                                "field_name_label": "Field Name",
                                "data_type_label": "Data Type",
                                "default_value_label": "Default Value",
                                "description_label": "Description",
                                "attributes": [
                                    {
                                        "field_name": "failoverClientConfig",
                                        "data_type": "http:FailoverClientEndpointConfiguration",
                                        "default_value": "{}",
                                        "description": "The configurations for the failover client endpoint"
                                    },
                                    {
                                        "field_name": "failoverInferredConfig",
                                        "data_type": "http:FailoverInferredConfig",
                                        "default_value": "",
                                        "description": "Configurations derived from FailoverConfig"
                                    },
                                    {
                                        "field_name": "succeededEndpointIndex",
                                        "data_type": "int",
                                        "default_value": "",
                                        "description": "Index of the CallerActions[] array which given a successful response"
                                    }
                                ]
                            }
                        ],
                        "method": [
                            {
                                "method_type": "post",
                                "method_params": "(string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(Response | error<>)",
                                "description": "The POST remote function implementation of the Failover Connector.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "message",
                                                        "data_type": "http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]?",
                                                        "default_value": "",
                                                        "description": "HTTP request or any payload of type string, xml, json, byte[], io:ReadableByteChannel or mime:Entity[]"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "The response or an error if failed to fulfill the request"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "head",
                                "method_params": "(string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(Response | error<>)",
                                "description": "TThe HEAD remote function implementation of the Failover Connector.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "message",
                                                        "data_type": "http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]?",
                                                        "default_value": "null",
                                                        "description": "An optional HTTP request or any payload of type string, xml, json, byte[], io:ReadableByteChannel or mime:Entity[]"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "The response for the request or an error if failed to establish communication with the upstream server"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "patch",
                                "method_params": "(string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(Response | error<>)",
                                "description": "The PATCH remote function implementation of the Failover Connector.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "message",
                                                        "data_type": "http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]?",
                                                        "default_value": "",
                                                        "description": "An HTTP request or any payload of type string, xml, json, byte[], io:ReadableByteChannel or mime:Entity[]"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "The response for the request or an error if failed to establish communication with the upstream server"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "put",
                                "method_params": "(string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(Response | error<>)",
                                "description": "The PUT remote function implementation of the Failover Connector.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "message",
                                                        "data_type": "http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]?",
                                                        "default_value": "",
                                                        "description": "An HTTP request or any payload of type string, xml, json, byte[], io:ReadableByteChannel or mime:Entity[]"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "The response for the request or an error if failed to establish communication with the upstream server"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "options",
                                "method_params": "(string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(Response | error<>)",
                                "description": "The OPTIONS remote function implementation of the Failover Connector.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "message",
                                                        "data_type": "http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]?",
                                                        "default_value": "null",
                                                        "description": "An optional HTTP request or any payload of type string, xml, json, byte[], io:ReadableByteChannel or mime:Entity[]"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "The response for the request or an error if failed to establish communication with the upstream server"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "forward",
                                "method_params": "(string path, http:Request request)",
                                "label_return": "returns",
                                "return_params": "(Response | error<>)",
                                "description": "Invokes an HTTP call using the incoming request's HTTP method.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "request",
                                                        "data_type": "http:Request",
                                                        "default_value": "",
                                                        "description": "An HTTP request"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "The response for the request or an error if failed to establish communication with the upstream server"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "execute",
                                "method_params": "(string httpVerb, string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(Response | error<>)",
                                "description": "Invokes an HTTP call with the specified HTTP method.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "httpVerb",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "HTTP method to be used for the request"
                                                    },
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "message",
                                                        "data_type": "http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]?",
                                                        "default_value": "",
                                                        "description": "An HTTP request or any payload of type string, xml, json, byte[], io:ReadableByteChannel or mime:Entity[]"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "The response for the request or an error if failed to establish communication with the upstream server"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "delete",
                                "method_params": "(string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(HTTPFuture | error<>)",
                                "description": "The DELETE remote function implementation of the Failover Connector.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "message",
                                                        "data_type": "http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]?",
                                                        "default_value": "",
                                                        "description": "An HTTP request or any payload of type string, xml, json, byte[], io:ReadableByteChannel or mime:Entity[]"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "httpFuture | error<>",
                                                "description": "An httpFuture that represents an asynchronous service invocation, or an error if the submission fails"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "get",
                                "method_params": "(string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(HttpFuture | error<>)",
                                "description": "The GET remote function implementation of the Failover Connector.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "Resource path"
                                                    },
                                                    {
                                                        "field_name": "message",
                                                        "data_type": "http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]?",
                                                        "default_value": "null",
                                                        "description": "An optional HTTP request or any payload of type string, xml, json, byte[], io:ReadableByteChannel or mime:Entity[]"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "An HTTP response message, or an error if the invocation fails"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "submit",
                                "method_params": "(string httpVerb, string path, http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]? message)",
                                "label_return": "returns",
                                "return_params": "(HttpFuture | error<>)",
                                "description": "Submits an HTTP request to a service with the specified HTTP verb. The submit() function does not return a Response as the result, rather it returns an HttpFuture which can be used for subsequent interactions with the HTTP endpoint.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "httpVerb",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "The HTTP verb value"
                                                    },
                                                    {
                                                        "field_name": "path",
                                                        "data_type": "string",
                                                        "default_value": "",
                                                        "description": "The resource path"
                                                    },
                                                    {
                                                        "field_name": "message",
                                                        "data_type": "http:Request|string|xml|json|byte[]|io:ReadableByteChannel|mime:Entity[]?",
                                                        "default_value": "",
                                                        "description": "An HTTP outbound request message or any payload of type string, xml, json, byte[], io:ReadableByteChannel or mime:Entity[]"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "HttpFuture | error<>",
                                                "description": "An HttpFuture that represents an asynchronous service invocation, or an error if the submission fails"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "getResponse",
                                "method_params": "(http:HttpFuture httpFuture)",
                                "label_return": "returns",
                                "return_params": "(error<>)",
                                "description": "Retrieves the Response for a previously submitted request.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "httpFuture",
                                                        "data_type": "http:HttpFuture",
                                                        "default_value": "",
                                                        "description": "The HttpFuture related to a previous asynchronous invocation"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "error<>",
                                                "description": "An HTTP response message, or an error if the invocation fails"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "hasPromise",
                                "method_params": "(http:HttpFuture httpFuture)",
                                "label_return": "returns",
                                "return_params": "(boolean)",
                                "description": "Checks whether a PushPromise exists for a previously submitted request.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "httpFuture",
                                                        "data_type": "http:PushPromise",
                                                        "default_value": "",
                                                        "description": "The HttpFuture relates to a previous asynchronous invocation"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "boolean",
                                                "description": "A boolean that represents whether a PushPromise exists"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "getNextPromise",
                                "method_params": "(http:HttpFuture httpFuture)",
                                "label_return": "returns",
                                "return_params": "(PushPromise | error<>)",
                                "description": "Retrieves the next available PushPromise for a previously submitted request.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "httpFuture",
                                                        "data_type": "http:HttpFuture",
                                                        "default_value": "",
                                                        "description": "The HttpFuture relates to a previous asynchronous invocation"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                            "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "PushPromise | error<>",
                                                "description": "An HTTP Push Promise message, or an error if the invocation fails"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "getPromisedResponse",
                                "method_params": "(http:PushPromise promise)",
                                "label_return": "returns",
                                "return_params": "(Response | error<>)",
                                "description": "Retrieves the promised server push Response message.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "promise",
                                                        "data_type": "http:PushPromise",
                                                        "default_value": "",
                                                        "description": "The related PushPromise"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                            "returns": [
                                    {
                                        "fields": [
                                            {
                                                "return_type_label": "Return Types",
                                                "return_description_label": "Description",
                                                "return_type": "Response | error<>",
                                                "description": "A promised HTTP Response message, or an error if the invocation fails"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "method_type": "rejectPromise",
                                "method_params": "(http:PushPromise promise)",
                                "label_return": "",
                                "return_params": "",
                                "description": "Rejects a PushPromise. When a PushPromise is rejected, there is no chance of fetching a promised response using the rejected promise.",
                                "params": [
                                    {
                                        "fields": [
                                            {
                                                "param_name_label": "Parameter Name",
                                                "data_type_label": "Data Type",
                                                "default_value_label": "Default Value",
                                                "description_label": "Description",
                                                "attributes": [
                                                    {
                                                        "field_name": "promise",
                                                        "data_type": "http:PushPromise",
                                                        "default_value": "",
                                                        "description": "The Push Promise to be rejected"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "HttpCachingClient",
                        "description": "An HTTP caching client implementation which takes an HttpActions instance and wraps it with an HTTP caching layer."
                    },
                    {
                        "name": "HttpCaller",
                        "description": "Provides the HTTP actions for interacting with an HTTP server. Apart from the standard HTTP methods, forward() and execute() functions are provided. More complex and specific endpoint types can be created by wrapping this generic HTTP actions implementation."
                    },
                    {
                        "name": "HttpClient",
                        "description": "Provides the HTTP remote functions for interacting with an HTTP server. Apart from the standard HTTP methods, forward() and execute() functions are provided. More complex and specific endpoint types can be created by wrapping this generic HTTP remote functions implementation."
                    },
                    {
                        "name": "HttpSecureClient",
                        "description": "Provides secure HTTP remote functions for interacting with HTTP endpoints. This will make use of the authentication schemes configured in the HTTP client endpoint to secure the HTTP requests."
                    },
                    {
                        "name": "LoadBalanceClient",
                        "description": "LoadBalanceClient endpoint provides load balancing functionality over multiple HTTP clients."
                    },
                    {
                        "name": "RedirectClient",
                        "description": "Provides redirect functionality for HTTP client remote functions."
                    },
                    {
                        "name": "RetryClient",
                        "description": "Provides the HTTP remote functions for interacting with an HTTP endpoint. This is created by wrapping the HTTP client to provide retrying over HTTP requests."
                    },
                    {
                        "name": "WebSocketCaller",
                        "description": "Represents a WebSocket caller."
                    },
                    {
                        "name": "WebSocketClient",
                        "description": "Represents a WebSocket client endpoint."
                    }
                ],
                "functions": [
                    {
                        "name": "createHttpCachingClient",
                        "function_params": "(string url, http:ClientEndpointConfig config, HTTP:CacheConfig cacheConfig)",
                        "description": "Creates an HTTP client capable of caching HTTP responses.",
                        "return_type": "Client | error<>",
                        "return_label": "Return",
                        "function_type_label": "public function",
                        "params": [
                            {
                                "fields": [
                                    {
                                        "param_name_label": "Parameter Name",
                                        "data_type_label": "Data Type",
                                        "default_value_label": "Default Value",
                                        "description_label": "Description",
                                        "attributes": [
                                            {
                                                "field_name": "url",
                                                "data_type": "string",
                                                "default_value": "",
                                                "description": "The URL of the HTTP endpoint to connect to"
                                            },
                                            {
                                                "field_name": "config",
                                                "data_type": "http:ClientEndpointConfig",
                                                "default_value": "",
                                                "description": "The configurations for the client endpoint associated with the caching client"
                                            },
                                            {
                                                "field_name": "cacheConfig",
                                                "data_type": "http:CacheConfig",
                                                "default_value": "",
                                                "description": "The configurations for the HTTP cache to be used with the caching client"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ],
                        "returns": [
                            {
                                "fields": [
                                    {
                                        "return_type_label": "Return Types",
                                        "return_description_label": "Description",
                                        "return_type": "Client | error<>",
                                        "description": "An HttpCachingClient instance which wraps the base Client with a caching layer"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "createHttpSecureClient",
                        "function_params": "(string url, http:ClientEndpointConfig config)",
                        "description": "Creates an HTTP client capable of securing HTTP requests with authentication.",
                        "return_type": "Client | error<>",
                        "return_label": "Return",
                        "function_type_label": "public function",
                        "params": [
                            {
                                "fields": [
                                    {
                                        "param_name_label": "Parameter Name",
                                        "data_type_label": "Data Type",
                                        "default_value_label": "Default Value",
                                        "description_label": "Description",
                                        "attributes": [
                                            {
                                                "field_name": "url",
                                                "data_type": "string",
                                                "default_value": "",
                                                "description": "Base URL"
                                            },
                                            {
                                                "field_name": "config",
                                                "data_type": "http:ClientEndpointConfig",
                                                "default_value": "",
                                                "description": "Client endpoint configurations"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ],
                        "returns": [
                            {
                                "fields": [
                                    {
                                        "return_type_label": "Return Types",
                                        "return_description_label": "Description",
                                        "return_type": "string | error<>",
                                        "description": "The string Value of the decoded url or an error that occured during decoding"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "decode",
                        "function_params": "(string url, string charset)",
                        "description": "Decodes the given URL.",
                        "return_type": "string | error<>",
                        "return_label": "Return",
                        "function_type_label": "public function",
                        "params": [
                            {
                                "fields": [
                                    {
                                        "param_name_label": "Parameter Name",
                                        "data_type_label": "Data Type",
                                        "default_value_label": "Default Value",
                                        "description_label": "Description",
                                        "attributes": [
                                            {
                                                "field_name": "url",
                                                "data_type": "string",
                                                "default_value": "",
                                                "description": "URL to be encoded"
                                            },
                                            {
                                                "field_name": "charset",
                                                "data_type": "string",
                                                "default_value": "",
                                                "description": "Charactor set that URL to be encoded in"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ],
                        "returns": [
                            {
                                "fields": [
                                    {
                                        "return_type_label": "Return Types",
                                        "return_description_label": "Description",
                                        "return_type": "string | error<>",
                                        "description": "The string Value of the decoded url or an error that occured during decoding"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "encode",
                        "function_params": "(string url, string charset)",
                        "description": "Encodes the given URL.",
                        "return_type": "string | error<>",
                        "return_label": "Return",
                        "function_type_label": "public function",
                        "params": [
                            {
                                "fields": [
                                    {
                                        "param_name_label": "Parameter Name",
                                        "data_type_label": "Data Type",
                                        "default_value_label": "Default Value",
                                        "description_label": "Description",
                                        "attributes": [
                                            {
                                                "field_name": "url",
                                                "data_type": "string",
                                                "default_value": "",
                                                "description": "URL to be encoded"
                                            },
                                            {
                                                "field_name": "charset",
                                                "data_type": "string",
                                                "default_value": "",
                                                "description": "Charactor set that URL to be encoded in"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ],
                        "returns": [
                            {
                                "fields": [
                                    {
                                        "return_type_label": "Return Types",
                                        "return_description_label": "Description",
                                        "return_type": "string | error<>",
                                        "description": "The string Value of the encoded url or an error that occured during encoding"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "invokeEndpoint",
                        "function_params": "(string path, http:Request outRequest, FORWARD|GET|POST|DELETE|OPTIONS|PUT|PATCH|HEAD|NONE requestAction, http:Client httpClient)",
                        "description": "The HEAD remote function implementation of the Circuit Breaker. This wraps the head() function of the underlying HTTP remote function provider.",
                        "return_type": "Response | error<>",
                        "return_label": "Return",
                        "function_type_label": "public function",
                        "params": [
                            {
                                "fields": [
                                    {
                                        "param_name_label": "Parameter Name",
                                        "data_type_label": "Data Type",
                                        "default_value_label": "Default Value",
                                        "description_label": "Description",
                                        "attributes": [
                                            {
                                                "field_name": "path",
                                                "data_type": "string",
                                                "default_value": "",
                                                "description": "Resource path"
                                            },
                                            {
                                                "field_name": "outRequest",
                                                "data_type": "http:Request",
                                                "default_value": "",
                                                "description": "A Request struct"
                                            },
                                            {
                                                "field_name": "requestAction",
                                                "data_type": "FORWARD|GET|POST|DELETE|OPTIONS|PUT|PATCH|HEAD|NONE",
                                                "default_value": "",
                                                "description": "HttpOperation related to the request"
                                            },
                                            {
                                                "field_name": "httpClient",
                                                "data_type": "http:Client",
                                                "default_value": "",
                                                "description": "HTTP client which uses to call the relavant functions"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ],
                        "returns": [
                            {
                                "fields": [
                                    {
                                        "return_type_label": "Return Types",
                                        "return_description_label": "Description",
                                        "return_type": "Response | error<>",
                                        "description": "The response for the request or an error if failed to establish communication with the upstream server"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "parseHeader",
                        "function_params": "(string headerValue)",
                        "description": "Parses the given header value to extract its value and parameter map.",
                        "return_type": "((string,map<any>) | error<>",
                        "return_label": "Return",
                        "function_type_label": "public function",
                        "params": [
                            {
                                "fields": [
                                    {
                                        "param_name_label": "Parameter Name",
                                        "data_type_label": "Data Type",
                                        "default_value_label": "Default Value",
                                        "description_label": "Description",
                                        "attributes": [
                                            {
                                                "field_name": "headerValue",
                                                "data_type": "string",
                                                "default_value": "",
                                                "description": "The header value"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ],
                        "returns": [
                            {
                                "fields": [
                                    {
                                        "return_type_label": "Return Types",
                                        "return_description_label": "Description",
                                        "return_type": "(string,map) | error<>",
                                        "description": "Returns a tuple containing the value and its parameter map"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "listeners": [],
                "constants": [
                    {
                        "fields": [
                            {
                                "name_label": "Name",
                                "data_type_label": "Data Type",
                                "default_value_label": "Value",
                                "description_label": "Description"
                            }
                        ]
                    },
                    {
                        "name": "AUTH_HEADER",
                        "data_type": "string",
                        "default_value": "Authorization",
                        "description": "Authentication header name."
                    },
                    {
                        "name": "AUTH_SCHEME_BASIC",
                        "data_type": "string",
                        "default_value": "Basic",
                        "description": "Basic authentication scheme."
                    },
                    {
                        "name": "AUTH_SCHEME_BEARER",
                        "data_type": "string",
                        "default_value": "Bearer",
                        "description": "Bearer authentication scheme."
                    },
                    {
                        "name": "AUTH_PROVIDER_LDAP",
                        "data_type": "string",
                        "default_value": "ldap",
                        "description": "LDAP auth provider config name."
                    },
                    {
                        "name": "AUTHN_SCHEME_BASIC",
                        "data_type": "string",
                        "default_value": "basic",
                        "description": "Authn scheme basic."
                    },
                    {
                        "name": "AUTH_SCHEME_JWT",
                        "data_type": "string",
                        "default_value": "jwt",
                        "description": "Authn scheme JWT."
                    },
                    {
                        "name": "AUTH_SCHEME_OAUTH2",
                        "data_type": "string",
                        "default_value": "oauth2",
                        "description": "Authn scheme OAuth2."
                    },
                    {
                        "name": "NO_CACHE",
                        "data_type": "string",
                        "default_value": "no-cache",
                        "description": "Forces the cache to validate a cached response with the origin server before serving."
                    },
                    {
                        "name": "NO_STORE",
                        "data_type": "string",
                        "default_value": "no-store",
                        "description": "Instructs the cache to not store a response in non-volatile storage."
                    },
                    {
                        "name": "NO_TRANSFORM",
                        "data_type": "string",
                        "default_value": "no-transform",
                        "description": "Instructs intermediaries not to transform the payload."
                    },
                    {
                        "name": "MAX_AGE",
                        "data_type": "string",
                        "default_value": "max-age",
                        "description": "When used in requests, max-ageimplies that clients are not willing to accept responses whose age is greater than max-age. When used in responses, the response is to be considered stale after the specified number of seconds."
                    },
                    {
                        "name": "MAX_STALE",
                        "data_type": "string",
                        "default_value": "max-stale",
                        "description": "Indicates that the client is willing to accept responses which have exceeded their freshness lifetime by no more than the specified number of seconds."
                    }
                ],
                "annotations": [
                    {
                        "fields": [
                            {
                                "name_label":"Name",
                                "attachment_points_label":"Attachment Points",
                                "data_type_label":"Data Type",
                                "description_label":"Description"
                            }
                        ]
                    },
                    {
                        "name": "ResourceConfig",
                        "data_type": "resource",
                        "default_value": "HttpResourceConfig",
                        "description": "The annotation which is used to configure an HTTP resource."
                    },
                    {
                        "name": "ServiceConfig",
                        "data_type": "service",
                        "default_value": "HttpServiceConfig",
                        "description": "The annotation which is used to configure an HTTP service."
                    },
                    {
                        "name": "WebSocketServiceConfig",
                        "data_type": "service",
                        "default_value": "WSServiceConfig",
                        "description": "The annotation which is used to configure a WebSocket service."
                    }
                ],
                "errors": []
            }
        },
        {
            "id": "config",
            "description": "This module offers a cache that supports time-based eviction, and size-based eviction.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "encoding",
            "description": "The config module provides the Config API to read configurations from environment variables, TOML files, and command-line parameters, and build a consolidated set of configurations.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "file",
            "description": "This module contains services that register listeners against a local folder and identify events that create, modify, and delete files.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "io",
            "description": "This module is designed to support input and output operations via channels in a canonical way, either in a blocking, or non-blocking manner.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "log",
            "description": "This module provides a basic API for logging.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "math",
            "description": "This module provides functions to perform fixed-precision integer arithmetic and fixed-precision decimal arithmetic. It includes functions to get the absolute, cosine, sine, root, tangent, and more for a given value.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "grpc",
            "description": "This module provides an implementation for connecting and interacting with HTTP, HTTP2, and WebSocket endpoints. The module facilitates two types of endpoints as ‘Client’ and ‘Listener’.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "h2",
            "description": "This module contains functions to support gRPC protocol based communication. gRPC is a framework developed by Google to support the RPC (Remote Procedure Call) protocol.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "file",
            "description": "This module provides the functionality required to access and manipulate data stored in an H2 database.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "mysql",
            "description": "This module contains services that register listeners against a local folder and identify events that create, modify, and delete files.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "io",
            "description": "This module provides the functionality required to access and manipulate data stored in a MySQL database.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "runtime",
            "description": "This module is designed to support input and output operations via channels in a canonical way, either in a blocking, or non-blocking manner.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "auth",
            "description": "This module includes functions to interact with the runtime, the invocation context and to manage errors.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "h2",
            "description": "This module contains functions to support gRPC protocol based communication. gRPC is a framework developed by Google to support the RPC (Remote Procedure Call) protocol.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "file",
            "description": "This module provides the functionality required to access and manipulate data stored in an H2 database.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "mysql",
            "description": "This module contains services that register listeners against a local folder and identify events that create, modify, and delete files.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "observe",
            "description": "This module provides the functionality required to access and manipulate data stored in a MySQL database.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "reflect",
            "description": "This module is designed to support input and output operations via channels in a canonical way, either in a blocking, or non-blocking manner.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "runtime",
            "description": "This module includes functions to interact with the runtime, the invocation context and to manage errors.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "socket",
            "description": "This module provides the functionality required to access and manipulate data stored in a MySQL database.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "sql",
            "description": "This module is designed to support input and output operations via channels in a canonical way, either in a blocking, or non-blocking manner.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "streams",
            "description": "This module includes functions to interact with the runtime, the invocation context and to manage errors.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "swagger",
            "description": "This module provides the functionality required to access and manipulate data stored in a MySQL database.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "system",
            "description": "This module is designed to support input and output operations via channels in a canonical way, either in a blocking, or non-blocking manner.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "task",
            "description": "This module includes functions to interact with the runtime, the invocation context and to manage errors.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "test",
            "description": "This module contains functions to support gRPC protocol based communication. gRPC is a framework developed by Google to support the RPC (Remote Procedure Call) protocol.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "file",
            "description": "This module provides the functionality required to access and manipulate data stored in an H2 database.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "time",
            "description": "This module contains services that register listeners against a local folder and identify events that create, modify, and delete files.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "transactions",
            "description": "This module provides the functionality required to access and manipulate data stored in a MySQL database.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        },
        {
            "id": "websub",
            "description": "This module is designed to support input and output operations via channels in a canonical way, either in a blocking, or non-blocking manner.",
            "constructs": {
                "records": [],
                "objects": [],
                "clients": [],
                "functions": [],
                "listeners": [],
                "constants": [],
                "annotations": [],
                "errors": []
            }
        }
    ]
}
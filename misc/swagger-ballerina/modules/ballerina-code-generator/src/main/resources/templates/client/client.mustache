import ballerina.net.http;
import ballerina.io;

public connector {{name}} () {

    endpoint <http:HttpClient> ep {
        create http:HttpClient("{{url}}", {});
    }
    http:HttpConnectorError httpError;
{{#resources}}
    action {{name}} ({{#parameters}}{{type}} {{name}}{{#unless @last}}, {{/unless}}{{/parameters}}) (http:InResponse, error) {
        http:OutRequest request = {};
        http:InResponse response = {};
        error outError;

        //Create the required request as needed
        //request.setHeader("Content-Type", "application/json");
        string path = string `{{path}}`;
        response, httpError = ep.{{lower method}}(path, request);
        if (httpError != null) {
            outError = {message:httpError.message, cause:httpError.cause};
        }

        return response, outError;
    }
{{/resources}}
}

function main (string[] args) {
    endpoint<{{name}}> connectorEp {
        create {{name}}();
    }

    http:InResponse resp;
    error err;
    string message;
    {{#resources}}
    // sample invocation of {{name}} resource
    resp, err = connectorEp.{{name}}({{#parameters}}{{>arguments}}{{/parameters}});
    message, _ = resp.getStringPayload();
    io:println(message);{{/resources}}
}

#!/usr/bin/env bash

set -e

BAL_HOME=$1
chmod +x ${BAL_HOME}/bin/ballerina
export PATH=${BAL_HOME}/bin:$PATH
resultsFolderName=results
resultsFileName=${resultsFolderName}/$4.csv
NA=NA

echo "Running Performance benchmarks ..."

if [ ! -d "$resultsFolderName" ]; then
 mkdir ${resultsFolderName}
fi

echo "Function_Name,Total Time (ms),Average Latency (ns),Throughput (operations/second),GC throughput (%),freedMemoryByFullGC (M),maxPause (s) " > ${resultsFileName}

ballerina build benchmark

for word in $(<benchmarkFunctions.txt)
    do
         export _JAVA_OPTIONS="-Xloggc:"$5gc_${word}.log""
         ballerina run target/benchmark.balx $2 $3 ${word} | tr -d "\n" >> ${resultsFileName}
         unset _JAVA_OPTIONS

         ## check whether there are any GC events.
         if  ((3 < "$(wc -l < target/gc_${word}.log)")); then

             ###### Analyze GC Logs ######
             gcSummaryFile=target/gc_summarry_${word}.csv
             java -jar target/gcviewer-$6.jar target/gc_${word}.log ${gcSummaryFile}

             # GC throughput
             GC_throughput=$(awk -F "\"*;\"*" '{print $2}' ${gcSummaryFile} | awk NR==37 )
             echo "${GC_throughput/n.a./$NA}," | tr -d "\n"  >> ${resultsFileName}

             # freedMemoryByFullGC
             freedMemoryByFullGC=$(awk -F "\"*;\"*" '{print $2}' ${gcSummaryFile} | awk NR==5 )
             echo "${freedMemoryByFullGC/n.a./$NA}," | tr -d "\n"  >> ${resultsFileName}

             #  GC maxPause
             GC_maxPause=$(awk -F "\"*;\"*" '{print $2}' ${gcSummaryFile} | awk NR==24 )
             echo ${GC_maxPause/n.a./$NA} >> ${resultsFileName}

        else
             echo "$NA,$NA,$NA" >> ${resultsFileName}
        fi

    done
